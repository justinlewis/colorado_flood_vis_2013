<!DOCTYPE html><meta charset="utf-8"></meta>
<html>

<style>
body {
  font: 13px sans-serif;
}

#chart-container {
	width: 1700px;
	height: 600px;
	padding: 5px;
	margin-left: 50px;
}

.chart {
	padding: 1px;
}

.axis path {
/*	display: none;*/
   stroke: #000;
},

/*.axis path,*/
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: gray;
/*  stroke: white;*/
}

.x.axis path {
  display: none;
}

.y.axis path {
 	fill: none;
   stroke: black;
   shape-rendering: crispEdges;
}

rect:hover {
   fill: darkgray;
}

div.tooltip {   
  position: absolute;           
  text-align: center;           
  width: 155px;                  
  height: 55px;                 
  padding: 2px;             
  font: 15px sans-serif;        
  background: white;   
  border: 0px;      
  border-radius: 8px;           
  pointer-events: none;         
}

</style>

<body>

<div id="chart-container"></div>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>

<script>

var margin = {top: 20, right: 5, bottom: 70, left: 50},
    width = 1700 - margin.left - margin.right,
    height = 600 - margin.top - margin.bottom;

var formatPercent = d3.format("");

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);


//var x = d3.scale.linear()
//    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .tickValues(["2013-09-09 12:00", "2013-09-10 12:00", "2013-09-11 12:00", "2013-09-12 12:00", "2013-09-13 12:00", "2013-09-14 12:00"])
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");
   // .tickFormat(formatPercent);
   
var div = d3.select("#chart-container").append("div")   
    .attr("class", "tooltip")               
    .style("opacity", 0);

var svg = d3.select("#chart-container").append("svg")
	 .attr("class", "chart")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    



var dataParsed = [];

d3.json("boulder_creek_at_longmont.json",function(error,data){
	if (error) return console.warn(error);
   dataParsed = data;
    	
		  x.domain(dataParsed.map(function(d) { return d.date; }));
		  y.domain([0, d3.max(dataParsed, function(d) { return d.discharge_cfs *1 ;})]);
		
		  //// Adds X axis labels
		  svg.append("g")
		      .attr("class", "x axis")
		      .attr("transform", "translate(0," + height + ")")
		      .call(xAxis)
		      // Angles the x-axis labels
		      .selectAll("text")  
            .style("text-anchor", "end")
				.style("font-size", "13px") 
            .attr("dx", "-.2em")
            .attr("dy", ".25em");
            //.attr("transform", function(d) {return "rotate(-65)" });
            
		  //// Adds Y axis labels
		  svg.append("g")
		      .attr("class", "y axis")
		      .call(yAxis)
		      .attr("transform", "translate(" + 1  + ",0)")
		      .style("font-size", "13px") 
		      //// Adds additional label for y-axis
		      .append("text")
		      .attr("transform", "rotate(-90)")
		      .attr("y", 4)
		      .attr("dy", ".71em")
		      .style("text-anchor", "end")
		      .style("font-size", "15px") 
		      .text("H20 Discharge (CFS)");
	
		  //// Properties of the bars
		  svg.selectAll(".bar")
		      .data(dataParsed)
		      .enter().append("rect")
		      .attr("class", "bar")
		      .attr("x", function(d) { return x(d.date); })	      
		      .attr("width", x.rangeBand())
		      .transition().delay(function (d,i){ return i * 10;}).duration(10)
 				.attr("y", function(d) { return y(d.discharge_cfs); })
		      .attr("height", function(d) { return height - y(d.discharge_cfs); });
		   
		   //// Add hover over events after transition completes
		   svg.selectAll(".bar")
		   .on("mouseover", function(d) {      
	            div.transition()        
	                .duration(100)      
	                .style("opacity", .9);      
	            div .html("H20 Flow: " + d.discharge_cfs + " cfs" + "<br/>" + "H20 Level: " + d.height_ft + " ft" + "<br/>" + d.date)  
	                .style("left", (d3.event.pageX) + "px")     
	                .style("top", (d3.event.pageY - 28) + "px");    
	            })                  
	        .on("mouseout", function(d) {       
	            div.transition()        
	                .duration(500)      
	                .style("opacity", 0);   
	        });
		      
		     	
			
	//		//// Add labels above bars
//			svg.selectAll("text")
//			  .data(dataParsed, function(d) {return [d.discharge_cfs];})
//			  .enter().append("text")		
//			  .transition().delay(function (d,i){ return i * 20;}).duration(20)			  	  
//			  .attr("x", function(d) { return x(d.date) } )
//			  .attr("y", function(d) { return y(d.discharge_cfs ) - 2 })
//			  .attr("dx", "13")
////			  .attr("dy", ".3em")
//			  .attr("text-anchor", "middle")
//			  .attr("font-family", "sans-serif")
//   		  .attr("font-size", "8px")
//			 // .attr("transform", "rotate(-90)")
//			  .text(function(d) { return d.discharge_cfs; })
//			  .attr("fill", "black");		
			
			svg.append("text")
	        .attr("x", (width / 2))             
	        .attr("y", 0 - (margin.top / 3))
	        .attr("text-anchor", "middle")  
	        .style("font-size", "19px") 
	        .style("text-decoration", "underline")  
	        .text("Stream Flow Measurements for Boulder Creek at Longmont");
	       

})	       
  
</script>


</body>
</html>




